<pre class='metadata'>
Title: Your Spec Title
Shortname: DID-Linked Resources
Level: 1
Status: w3c/CG-DRAFT
Group: w3c-ccg
URL: https://w3c-ccg.github.io/did-linked-resources/
Editor: Alex Tweeddale, https://github.com/Tweeddalex
Abstract: This specification intends to create a standardized way of referencing, dereferencing and fetching digital resources. This includes associating digital resources with Decentralized Identifiers (DIDs) and organizing in DID-Linked Collections, where each individual resource is identifiable through its own DID URL.
</pre>

1. Introduction {#intro}
=====================

DID-Linked Resources are digital files that may can be retrieved and referenced using a persistent and unique DID URL. 

This specification defines common requirements, algorithms including their request formats and response formats, architectural options, and various considerations for how DID-Linked Resources SHOULD act as persistent identifiers for referencing and retrieving digital Resources (such as data schemas, interface definitions, governance documents, or policy definitions). Through using DID URLs which remain conformant with W3C Decentralized Identifiers (DIDs) 1.0 specification, existing DID Resolvers will be able to dereference these DID URLs to retrieve the identified resources using the DID URL query syntax in this specification.

Note that while this specification defines some base-level functionality for DID URL dereferencing, the actual steps required to communicate with a DID's verifiable data registry are defined by the applicable DID method specification.

1.1 Conformance {#conformance}
=====================

As well as sections marked as non-normative, all authoring guidelines, diagrams, examples, and notes in this specification are non-normative. Everything else in this specification is normative.
The key words MAY, MUST, MUST NOT, OPTIONAL, and SHOULD in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.

2. Terminology {#terminology}
=====================

<dfn>DID controller</dfn>: As defined in [DID-CORE].

<dfn>DID document</dfn>: As defined in [DID-CORE].

<dfn>DID URL</dfn>: As defined in [DID-CORE].

<dfn>DID URL Dereferencing</dfn>: As defined in [DID-CORE].

<dfn>DID-Linked Resource</dfn>:

<dfn>Resource Collection</dfn>:

<dfn>Resource ID</dfn>: 

3. DID-Linked Resources Algorithm {#algorithm}
=====================


4. DID-Linked Resources {#resources}
=====================

Although the DID Core specification defines an interoperable standard for DID Documents and associated core properties, it currently does not have a standardised way to specify properties of Resources and how to fetch them.

To create a new Resource, a client application first needs to create a DID (or use an existing not deactivated DID along with its associated DIDDoc.) This DID-Linked Resource is the lowest, direct level of create/update/deactivate operation control that exists.
Individual Resources are uniquely identified by a common Resource Name and common Resource Type that MUST remain consistent across versions. The specific version number of a Resource is described using the Resource ID, which is a Universally-Unique Identifier (UUID). Since UUIDs can be generated by any compatible software library, client applications are able to define this version number independent of any method-specific implementation.
This allows a specific Resource version to be referenced in a Verifiable Credential, as well as allowing client applications to query historical/updated Resource versions along with metadata that describes how the Resource evolved within a Resource Collection.

<img src="DID-Linked-Resources-Relationship" alt="Relationship between DIDs and DID-Linked Resources">

